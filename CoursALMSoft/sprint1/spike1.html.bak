<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"><html lang="en-US">  <head>    <meta http-equiv="content-type" content="text/html; charset=utf-8">    <title>Workshop: Programming Basics</title>    <meta name="CHANGEDBY" content="Pr. Olivier Gruber">    <link rel="stylesheet" href="../style.css" type="text/css">    <script src="../common.js"></script>  </head>  <body onload="shellOnLoad()">    <script>      function shellOnLoad() {        multiLang();      }      </script>    <div id="outer-container">      <div id="header">        <div id="logo"> <img src="../logo_uga.png" alt="Université Grenoble-Alpes"            border="0"            height="100">          <img src="../logo_reseau_polytech.gif" alt="Polytech" border="0" height="80"></div>        <div id="top-links"> <a href="../index.html">Home</a> </div>      </div>      <div id="inner-container">        <h1>Principes de programmation en Assembleur<br>        </h1>        <h2>Environnement de travail<br>        </h2>        <span style="font-family: Arial,Serif;">Pour des raisons pratiques et          de facilité d'utilisation, nous allons utiliser un          simulateur. Il va nous permettre de&nbsp; créer une machine virtuelle          sur votre ordinateur et de s'en servir comme si vous l'aviez à votre          disposition pour de "vrai".&nbsp; <br>          <br>          L'émulateur QEMU permet de créer une machine virtuelle sur votre          ordinateur. Il offre la possibilité d'utiliser différents          processeurs. Nous choisirons le processeur ARM, processeur RISC          (Reduce          Instruction Set Computer) plutôt          simple et donc bien adapté à l'enseignement. Ce processeur de par sa          simplicité et sa faible consommation est largement utilisé dans le          domaine de l'<span style="font-style: italic;">embarqué</span>          (téléphone portable, tablette..)<br>          <br>          QEMU est une          bonne          plate-forme pour les développeurs car elle prend en charge le          débogage,          ce qui est aussi excellent pour l'apprentissage.          <h3>Emulateur QEMU <br>          </h3>          Installation de QEMU pour une machine ARM:<br>          <p><textarea class="terminal" rows="2"> $ sudo apt-get install qemu-system-arm </textarea></p>          <p>Vérification de l'installation de QEMU </p>          <textarea class="terminal" rows="2"> $ qemu-system-i386 </textarea>          <p>Si le programme est installé, il apparaîtra une fenêtre qui            ressemble à l'écran d'une machine qui vient d'être mise sous            tension.            Bientôt, vous verrez que la machine tente de démarrer et échouera            bientôt. C'est une bonne nouvelle. Vous avez l'émulateur QEMU prêt            pour            simuler une machine ARM. </p>          <h3>Outils de développement et de débugage<br>          </h3>          <!--	    gcc-5-arm-linux-gnueabi	    gdb-arm-none-eabi	    gcc-arm-none-eabi	  -->          <p>Pour développer un logiciel, avoir une plate-forme pour simuler une            machine ne suffit pas, vous avez besoin des outils pour compiler et            déboguer. Heureusement, de tels outils existent en tant qu'outils            multi-plate-formes, c'est-à-dire les outils exécutés sur votre            machine,            disons une machine Intel fonctionnant sous Linux,&nbsp; peuvent être            utilisés pour créer et manipuler des logiciels pour une machine            cible,            disons notre machine virtuelle (VersatilePB) basée sur un processeur            ARM.</p>        </span>        <p>Installation du compilateur GCC pour ARM : </p>        <textarea class="terminal" rows="2"> $ sudo apt-get install gcc-arm-none-eabi </textarea>        <span style="font-family: Arial,Serif;"></span>        <p>Installation du débugueur GDB pour ARM : </p>        <textarea class="terminal" rows="2"> $ sudo apt-get install gdb-arm-none-eabi </textarea>        <p>Il est possible que le paquet <i>gdb-arm-none-eabi</i> ne soit pas          disponible          sur votre distribution, en particulier sur Ubutuntu 18.04. Si c'est le          cas,          installez le paquet suivant :</p>        <textarea class="terminal" rows="2"> $ sudo apt-get install gdb-multiarch</textarea>        <span style="font-family: Arial,Serif;">          <p>Installation de l'assembleur, de l'éditeur de liens et d'outils            binaires pour ARM : </p>          <textarea class="terminal" rows="2"> $ sudo apt-get install binutils-arm-none-eabi </textarea>          <div id="footer"><br>            <h3>Et pour ceux qui ont un mac:</h3>          </div>        </span><span style="font-family: Arial,Serif;">          <div>Vous pouvez par exemple utiliser l'installateur <b><i>brew </i></b>(https://brew.sh/index_fr)</div>          <div><br>          </div>          <div>Puis pour qemu:</div>          <div>&nbsp;&nbsp;&nbsp;<b> brew install qemu</b></div>          <div><br>          </div>          <div>&nbsp;&nbsp;&nbsp; </div>          <div>Pour les outils ARM:</div>          <div>Voir sur <b>https://developer.arm.com/tools-and-software/open-source-software/developer-tools/gnu-toolchain/gnu-rm/downloads</b><br>            <span style="font-family: Arial,Serif;"></span></div>          <div><br>          </div>          <div><br>          </div>          <div>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <br>            <div id="bottom-links" style="float: right;"> <a href="../index.html">Home</a>            </div>          </div>        </span></div>    </div>  </body></html>