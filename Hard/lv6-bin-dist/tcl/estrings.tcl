#==============================================================================
#                                   XLesar
#------------------------------------------------------------------------------
# estrings.tcl
#------------------------------------------------------------------------------
# les messages de l'outil, en anglais
#
#==============================================================================
set STRINGS(ok) "OK"
set STRINGS(help) "Help"
set STRINGS(cancel) "Cancel"
set STRINGS(browse) "Browse"
set STRINGS(files) "Files"
set STRINGS(main_file) "Main File"
set STRINGS(main_node) "Main Node"
set STRINGS(select_prg) "Select Main Program"
set STRINGS(lustre_files) "Academic Lustre Files"
set STRINGS(unknown_ft) "Unknown File Type"
set STRINGS(cannot_open) "Can't open"
set STRINGS(no_node_specified) "You must specify a main node"
set STRINGS(cant_expand) "Can't expand"
set STRINGS(from) "from"
set STRINGS(cant_add_input) "Can't define input"
set STRINGS(cant_run_proof) "Can't run proof"
set STRINGS(HELP_need_input) \
"You must declare at least 
one input variable
(even if you don't use it !)"
set STRINGS(cant_add_var) "Can't define variable"
set STRINGS(equation) "equation"
set STRINGS(assert_parse_error) "Error while parsing assertion"
set STRINGS(bad_assert_type) "Bad assertion type"
set STRINGS(HELP_assert_type) "Assertions must be boolean"
set STRINGS(parse_error) "Error while parsing"
set STRINGS(bad_prop_type) "Bad property type"
set STRINGS(HELP_prop_type) "Property must be boolean"
set STRINGS(status) "Status"
set STRINGS(comment) "Comment"
set STRINGS(new) "New"
set STRINGS(edit) "Edit"
set STRINGS(delete) "Delete"
set STRINGS(undefined) "undefined"
set STRINGS(unknown) "unknown"
set STRINGS(unnamed) "unnammed"
set STRINGS(property) "Property"
set STRINGS(already_declared) "already declared"
set STRINGS(really_destroy) "Really destroy"
set STRINGS(in_edition) "is being edited"
set STRINGS(save_project) "Save Project"
set STRINGS(save_project_as) "Save Project as ..."
set STRINGS(project_not_defined) \
        "Project not defined:\n use \"Save As ..\" command"
set STRINGS(project_saved_in) "Project saved in"
set STRINGS(lesar_project_files) "Lesar Project Files"
set STRINGS(select_a_project_file) "Select a project file"
set STRINGS(save_project_aborted) "Save project aborted ..."
set STRINGS(load_project) "Load Project"
set STRINGS(bad_format) "Bad Format ..."
set STRINGS(project_loaded) "Project loaded"
set STRINGS(HELP_load_error) "The file path has change, \
use the main browse command to reload it"
set STRINGS(new_project) "New Project"
set STRINGS(quit) "Quit"
set STRINGS(save_current_project) "Save the current project ?"
set STRINGS(algorithm) "Algorithm"
set STRINGS(enum)     "Enumerative"
set STRINGS(forward)  "Symbolic forward"
set STRINGS(backward) "Symbolic backward"
set STRINGS(verbose) "Verbose"
set STRINGS(noopt) "Simple static analysis"
set STRINGS(diagnosis) "Diagnosis"
set STRINGS(use_polyhedra) "Use polyhedra"
set STRINGS(improve_order) "Better bdd's order"
set STRINGS(compute_causal) "Causal assertion"
set STRINGS(run_proof) "RUN PROOF"
set STRINGS(checked) "checked"
set STRINGS(not_checked) "not checked"
set STRINGS(save) "Save"
set STRINGS(save_close) "Save & close"
set STRINGS(close) "Close"
set STRINGS(discard) "Discard changes on"
set STRINGS(description) "Description"
set STRINGS(show_description) "Show description"
set STRINGS(edit) "Edit"
set STRINGS(assertion) "Assertion"
set STRINGS(enabled) "enabled"
set STRINGS(var) "Var"
set STRINGS(input) "Input"
set STRINGS(really_destroy_def) "Really destroy the definition?"
set STRINGS(add-assertion) "New assertion"
set STRINGS(add-input) "New input"
set STRINGS(add-variable) "New variable"
set STRINGS(import_code) "Import"
set STRINGS(add) "Add"
set STRINGS(load_file) "Load file"
set STRINGS(remove_selection) "Remove selected file"
set STRINGS(nodes) "Nodes"
set STRINGS(remove) "Remove"
set STRINGS(select_import) "Select Import"
